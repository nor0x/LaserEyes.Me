@page "/"
@inject IJSRuntime _js;

<section class="face-body centered eUp">
    <div class="e-container">
        <h2 class="size-2"> 💥👀</h2>
        <h5 class="size-5">laser eyes yourself</h5>
        @if (gotFile)
        {
            <h6 class="size-6">just select your eyes!</h6>
            <canvas id="myCanvas" width=500 height=500 />
            <div class="e-col-4 centered">
                <a class="e-btn outlined rounded warning" @onclick="download">download</a>
            </div>

        }
        else
        {
            <div class="drag-drop-zone">
                <InputFile OnChange="@OnInputFileChange" />
                <p>drop profile image...</p>
            </div>
        }
    </div>
</section>


@code{
    private IList<string> imageDataUrls = new List<string>();
    private bool gotFile;

    private async Task download()
    {
        await _js.InvokeVoidAsync("functions.download");
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/jpg";
        var imageFile = e.File;

        var resizedImageFile = await imageFile.RequestImageFileAsync(format,
            500, 500);

        var buffer = new byte[resizedImageFile.Size];
        var stream = resizedImageFile.OpenReadStream();
        await stream.ReadAsync(buffer);

        var imageDataUrl = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        gotFile = true;
        StateHasChanged();

        await _js.InvokeVoidAsync("functions.paint", imageDataUrl);
    }
}